Sentiment Analysis Project in C++
This project is a simple sentiment analysis tool written in C++. It analyzes the sentiment of a given text by calculating a sentiment score based on the presence of positive and negative words. The tool can classify the input text as having a positive, negative, or neutral sentiment.

Key Concepts:
Sentiment Analysis:

Sentiment analysis is a natural language processing (NLP) technique used to determine the sentiment or emotion conveyed by a piece of text. It is commonly used to analyze opinions, reviews, and social media posts.
In this project, sentiment analysis is performed by matching words from the input text to a predefined list of sentiment words stored in an unordered map.
Unordered Map (Hash Map):

The project uses an unordered_map in C++ to store sentiment words and their corresponding scores. An unordered map provides fast lookups and is well-suited for this task, where we need to check if a word exists in the dictionary and retrieve its score.
Sentiment Scoring:

The sentiment score is calculated by summing the scores of all words found in the input text. Positive words contribute a positive score, while negative words contribute a negative score.
The total sentiment score determines the overall sentiment of the text:
Positive Sentiment: If the score is greater than zero.
Negative Sentiment: If the score is less than zero.
Neutral Sentiment: If the score is exactly zero.
Text Processing:

The project uses the stringstream class to tokenize the input text, splitting it into individual words that can be checked against the sentiment dictionary.
Project Workflow:
Loading Sentiment Words:

The function loadSentimentWords populates the unordered map with a list of predefined positive and negative words, each associated with a score of +1 or -1, respectively.
Analyzing Sentiment:

The function analyzeSentiment processes the input text by checking each word against the sentiment dictionary and summing the scores.
User Interaction:

The user inputs a text string for analysis, and the program outputs the sentiment score along with the corresponding sentiment classification (positive, negative, or neutral).
Potential Use Cases:
Customer Feedback Analysis: Quickly assess the sentiment of customer reviews or feedback to gauge overall satisfaction.
Social Media Monitoring: Analyze the sentiment of social media posts or comments to understand public opinion on a topic.
Text-Based Games or Chatbots: Implement sentiment analysis to respond appropriately based on the user's input.
